/* Create Triggers for Table Inserts and Updates*/
CREATE TRIGGER TRG_ADDRESS_INSERT AFTER INSERT ON ADDRESS REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO ADDRESSHISTORY(ADDRESSID, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.ADDRESSID, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_ADDRESS_UPDATE AFTER UPDATE ON ADDRESS REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO ADDRESSHISTORY(ADDRESSID, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.ADDRESSID, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REGISTEROFPLEDGES_INSERT AFTER INSERT ON REGISTEROFPLEDGES REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REGISTEROFPLEDGESHISTORY(REGISTEROFPLEDGESID, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REGISTEROFPLEDGESID, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REGISTEROFPLEDGES_UPDATE AFTER UPDATE ON REGISTEROFPLEDGES REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REGISTEROFPLEDGESHISTORY(REGISTEROFPLEDGESID, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REGISTEROFPLEDGESID, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_ACCOMMODATIONPLEDGE_INSERT AFTER INSERT ON ACCOMMODATIONPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO ACCOMMODATIONPLEDGEHISTORY(ACCOMMODATIONPLEDGEID, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, OWNEROCCUPIER, ACCOMMODATIONDATEFROM, ACCOMMODATIONDATETO, ACCOMMODATIONTYPE, ACCOMMODATIONCONDITION, NUMBEROFBEDS, VACANTORSHARED, OTHERAMENITIES,ADDITIONALINFORMATION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED)  VALUES (newrow.ACCOMMODATIONPLEDGEID, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.OWNEROCCUPIER, newrow.ACCOMMODATIONDATEFROM, newrow.ACCOMMODATIONDATETO, newrow.ACCOMMODATIONTYPE, newrow.ACCOMMODATIONCONDITION, newrow.NUMBEROFBEDS, newrow.VACANTORSHARED, newrow.OTHERAMENITIES,  newrow.ADDITIONALINFORMATION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_ACCOMMODATIONPLEDGE_UPDATE AFTER UPDATE ON ACCOMMODATIONPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO ACCOMMODATIONPLEDGEHISTORY(ACCOMMODATIONPLEDGEID, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, OWNEROCCUPIER, ACCOMMODATIONDATEFROM, ACCOMMODATIONDATETO, ACCOMMODATIONTYPE, ACCOMMODATIONCONDITION, NUMBEROFBEDS, VACANTORSHARED, OTHERAMENITIES,ADDITIONALINFORMATION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.ACCOMMODATIONPLEDGEID, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.OWNEROCCUPIER, newrow.ACCOMMODATIONDATEFROM, newrow.ACCOMMODATIONDATETO, newrow.ACCOMMODATIONTYPE, newrow.ACCOMMODATIONCONDITION, newrow.NUMBEROFBEDS, newrow.VACANTORSHARED, newrow.OTHERAMENITIES,  newrow.ADDITIONALINFORMATION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_SERVICEPLEDGE_INSERT AFTER INSERT ON SERVICEPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO SERVICEPLEDGEHISTORY(SERVICEPLEDGEID, PLEDGESERVICELEVELONE, PLEDGESERVICELEVELTWO, PLEDGESERVICELEVELTHREE, ADDITIONALINFORMATION, PLEDGESERVICEQUALIFICATION, PLEDGESERVICEDATEAVAILABLE, PLEDGESERVICEHOURSPERWEEK, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.SERVICEPLEDGEID, newrow.PLEDGESERVICELEVELONE, newrow.PLEDGESERVICELEVELTWO, newrow.PLEDGESERVICELEVELTHREE, newrow.ADDITIONALINFORMATION, newrow.PLEDGESERVICEQUALIFICATION, newrow.PLEDGESERVICEDATEAVAILABLE, newrow.PLEDGESERVICEHOURSPERWEEK, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_SERVICEPLEDGE_UPDATE AFTER UPDATE ON SERVICEPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO SERVICEPLEDGEHISTORY(SERVICEPLEDGEID, PLEDGESERVICELEVELONE, PLEDGESERVICELEVELTWO, PLEDGESERVICELEVELTHREE, ADDITIONALINFORMATION, PLEDGESERVICEQUALIFICATION, PLEDGESERVICEDATEAVAILABLE, PLEDGESERVICEHOURSPERWEEK, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.SERVICEPLEDGEID, newrow.PLEDGESERVICELEVELONE, newrow.PLEDGESERVICELEVELTWO, newrow.PLEDGESERVICELEVELTHREE, newrow.ADDITIONALINFORMATION, newrow.PLEDGESERVICEQUALIFICATION, newrow.PLEDGESERVICEDATEAVAILABLE, newrow.PLEDGESERVICEHOURSPERWEEK, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_GOODSPLEDGE_INSERT AFTER INSERT ON GOODSPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO GOODSPLEDGEHISTORY(GOODSPLEDGEID, GOODSCATEGORYONE, GOODSCATEGORYTWO, GOODSCATEGORYTHREE, GOODSSIZE, GOODSNEWORUSED, GOODSCONDITION, GOODSQUANTITY, ADDITIONALINFORMATION, ITEMSIZE, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.GOODSPLEDGEID, newrow.GOODSCATEGORYONE, newrow.GOODSCATEGORYTWO, newrow.GOODSCATEGORYTHREE, newrow.GOODSSIZE, newrow.GOODSNEWORUSED, newrow.GOODSCONDITION, newrow.GOODSQUANTITY, newrow.ADDITIONALINFORMATION, newrow.ITEMSIZE, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_GOODSPLEDGE_UPDATE AFTER UPDATE ON GOODSPLEDGE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO GOODSPLEDGEHISTORY(GOODSPLEDGEID, GOODSCATEGORYONE, GOODSCATEGORYTWO, GOODSCATEGORYTHREE, GOODSSIZE, GOODSNEWORUSED, GOODSCONDITION, GOODSQUANTITY, ADDITIONALINFORMATION, ITEMSIZE, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.GOODSPLEDGEID, newrow.GOODSCATEGORYONE, newrow.GOODSCATEGORYTWO, newrow.GOODSCATEGORYTHREE, newrow.GOODSSIZE, newrow.GOODSNEWORUSED, newrow.GOODSCONDITION, newrow.GOODSQUANTITY, newrow.ADDITIONALINFORMATION, newrow.ITEMSIZE, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REFERENCECATEGORY_INSERT AFTER INSERT ON REFERENCECATEGORY REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REFERENCECATEGORYHISTORY(REFERENCECATEGORYID, REFERENCECATEGORYDESC, PARENTCATEGORYID, DESCRIPTION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REFERENCECATEGORYID, newrow.REFERENCECATEGORYDESC, newrow.PARENTCATEGORYID, newrow.DESCRIPTION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REFERENCECATEGORY_UPDATE AFTER UPDATE ON REFERENCECATEGORY REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REFERENCECATEGORYHISTORY(REFERENCECATEGORYID, REFERENCECATEGORYDESC, PARENTCATEGORYID, DESCRIPTION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REFERENCECATEGORYID, newrow.REFERENCECATEGORYDESC, newrow.PARENTCATEGORYID, newrow.DESCRIPTION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REFERENCE_INSERT AFTER INSERT ON REFERENCE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REFERENCEHISTORY(REFERENCEID, REFTYPE, REFDESC, PARENTID, REFINDEX, DESCRIPTION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REFERENCEID, newrow.REFTYPE, newrow.REFDESC, newrow.PARENTID, newrow.REFINDEX, newrow.DESCRIPTION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_REFERENCE_UPDATE AFTER UPDATE ON REFERENCE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO REFERENCEHISTORY(REFERENCEID, REFTYPE, REFDESC, PARENTID, REFINDEX, DESCRIPTION, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.REFERENCEID, newrow.REFTYPE, newrow.REFDESC, newrow.PARENTID, newrow.REFINDEX, newrow.DESCRIPTION, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_LANDING_INSERT AFTER INSERT ON LANDING REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO LANDINGHISTORY(LANDINGID, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.LANDINGID, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_LANDING_UPDATE AFTER UPDATE ON LANDING REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO LANDINGHISTORY(LANDINGID, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.LANDINGID, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_VIEW_INSERT AFTER INSERT ON VIEW REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO VIEWHISTORY(VIEWID, VIEWNAME, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.VIEWID, newrow.VIEWNAME, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_VIEW_UPDATE AFTER UPDATE ON VIEW REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO VIEWHISTORY(VIEWID, VIEWNAME, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.VIEWID, newrow.VIEWNAME, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_MESSAGERESOURCE_INSERT AFTER INSERT ON MESSAGERESOURCE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO MESSAGERESOURCEHISTORY(MESSAGERESOURCEID, MESSAGEKEY, LOCALE, LOCALEREFERENCEID, MESSAGE, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.MESSAGERESOURCEID, newrow.MESSAGEKEY, newrow.LOCALE, newrow.LOCALEREFERENCEID, newrow.MESSAGE, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_MESSAGERESOURCE_UPDATE AFTER UPDATE ON MESSAGERESOURCE REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO MESSAGERESOURCEHISTORY(MESSAGERESOURCEID, MESSAGEKEY, LOCALE, LOCALEREFERENCEID, MESSAGE, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.MESSAGERESOURCEID, newrow.MESSAGEKEY, newrow.LOCALE, newrow.LOCALEREFERENCEID, newrow.MESSAGE, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_APPLICATIONUSER_INSERT AFTER INSERT ON APPLICATIONUSER REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO APPLICATIONUSERHISTORY(APPLICATIONUSERID, USERNAME, PASSWORD, ENABLED, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.APPLICATIONUSERID, newrow.USERNAME, newrow.PASSWORD, newrow.ENABLED, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_APPLICATIONUSER_UPDATE AFTER UPDATE ON APPLICATIONUSER REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO APPLICATIONUSERHISTORY(APPLICATIONUSERID, USERNAME, PASSWORD, ENABLED, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.APPLICATIONUSERID, newrow.USERNAME, newrow.PASSWORD, newrow.ENABLED, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_APPLICATIONUSERDETAILS_INSERT AFTER INSERT ON APPLICATIONUSERDETAILS REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO APPLICATIONUSERDETAILSHISTORY(APPLICATIONUSERDETAILSID, CONTACTNAME, REPRESENTORGANISATION, TELEPHONENUMBER, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, EMAILADDRESS, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.APPLICATIONUSERDETAILSID, newrow.CONTACTNAME, newrow.REPRESENTORGANISATION, newrow.TELEPHONENUMBER, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.EMAILADDRESS, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
CREATE TRIGGER TRG_APPLICATIONUSERDETAILS_UPDATE AFTER UPDATE ON APPLICATIONUSERDETAILS REFERENCING NEW ROW AS newrow FOR EACH ROW INSERT INTO APPLICATIONUSERDETAILSHISTORY(APPLICATIONUSERDETAILSID, CONTACTNAME, REPRESENTORGANISATION, TELEPHONENUMBER, ADDRESSONE, ADDRESSTWO, CITY, STATEPROVINCEREGION, POSTCODE, COUNTRY, EMAILADDRESS, CREATEDBYID, UPDATEDBYID, DATECREATED, DATEUPDATED) VALUES (newrow.APPLICATIONUSERDETAILSID, newrow.CONTACTNAME, newrow.REPRESENTORGANISATION, newrow.TELEPHONENUMBER, newrow.ADDRESSONE, newrow.ADDRESSTWO, newrow.CITY, newrow.STATEPROVINCEREGION, newrow.POSTCODE, newrow.COUNTRY, newrow.EMAILADDRESS, newrow.createdbyid, newrow.updatedbyid, newrow.datecreated, newrow.dateupdated);
