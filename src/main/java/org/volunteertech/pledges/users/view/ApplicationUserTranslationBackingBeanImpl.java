package org.volunteertech.pledges.users.view;

import org.volunteertech.pledges.users.dao.ApplicationUserImpl;
import java.io.Serializable;





/**
 * The User Model for controlling user access
 * The ApplicationUserTranslationBacking Bean supports the localisation of the ApplicationUser Screen
 * This class has been generated by the XSLT processor from the metadata and represents the
 * DataBase access handler for the ApplicationUser entity.
 * <P> 
 * It is essential that methods added to this class are given JavaDoc comments to allow
 * documentation to be generated. For a description of JavaDoc refer to The JavaDoc documentation.
 * A link is provided below.
 * <P>
 * @author Michael O'Connor
 * @version $Revision$
 * Date: $Date$
 * @see <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/index.html">JavaDoc Documentation</a> 
 * Change Log
 * ----------
 * $Log$
 *
 */
public class ApplicationUserTranslationBackingBeanImpl extends ApplicationUserImpl implements ApplicationUserTranslationBackingBean, Serializable { 

    private static final long serialVersionUID = 1L;
    
    /** The identifier for the User Details view */
    public static final Long VIEW_ID = Long.valueOf(11);
    
    /** The mapping key for the page title as displayed in the browser tab */
    public static String APPLICATIONUSER_TITLE_MAPPING_KEY = "applicationuser.form.title";
    
    /** The mapping key for the page header text as displayed at the top of the page */
    public static String APPLICATIONUSER_HEADER_MAPPING_KEY = "applicationuser.form.header";
    
    /** The mapping key for the form sub header */
    public static String APPLICATIONUSER_SUBHEADER_MAPPING_KEY = "applicationuser.form.subheader";
    
    
	/** The message resource mapping for the Label attached to the username property */  
	public static final String USERNAME_LABEL_MAPPING_KEY = "frmApplicationUserUsernameLabel";
	
	/** The message resource mapping for the place holder attached to the username property */  
	public static final String USERNAME_PLACEHOLDER_MAPPING_KEY = "frmApplicationUserUsernamePlaceHolder";

	/** The message resource mapping for the help text attached to the username property */  
	public static final String USERNAME_HELPBLOCK_MAPPING_KEY = "frmApplicationUserUsernameHelpBlock";

	/** The message resource mapping for the Label attached to the password property */  
	public static final String PASSWORD_LABEL_MAPPING_KEY = "frmApplicationUserPasswordLabel";
	
	/** The message resource mapping for the place holder attached to the password property */  
	public static final String PASSWORD_PLACEHOLDER_MAPPING_KEY = "frmApplicationUserPasswordPlaceHolder";

	/** The message resource mapping for the help text attached to the password property */  
	public static final String PASSWORD_HELPBLOCK_MAPPING_KEY = "frmApplicationUserPasswordHelpBlock";

	/** The message resource mapping for the Label attached to the enabled property */  
	public static final String ENABLED_LABEL_MAPPING_KEY = "frmApplicationUserEnabledLabel";
	
	/** The message resource mapping for the place holder attached to the enabled property */  
	public static final String ENABLED_PLACEHOLDER_MAPPING_KEY = "frmApplicationUserEnabledPlaceHolder";

	/** The message resource mapping for the help text attached to the enabled property */  
	public static final String ENABLED_HELPBLOCK_MAPPING_KEY = "frmApplicationUserEnabledHelpBlock";

	/** The message resource mapping for the Label attached to the userRoles property */  
	public static final String USERROLES_LABEL_MAPPING_KEY = "frmApplicationUserUserRolesLabel";
	
	/** The message resource mapping for the place holder attached to the userRoles property */  
	public static final String USERROLES_PLACEHOLDER_MAPPING_KEY = "frmApplicationUserUserRolesPlaceHolder";

	/** The message resource mapping for the help text attached to the userRoles property */  
	public static final String USERROLES_HELPBLOCK_MAPPING_KEY = "frmApplicationUserUserRolesHelpBlock";

	/** The message resource mapping for the Label attached to the saveButton property */  
	public static final String SAVEBUTTON_LABEL_MAPPING_KEY = "frmApplicationUserSaveButtonLabel";
	
	/** The message resource mapping for the place holder attached to the saveButton property */  
	public static final String SAVEBUTTON_PLACEHOLDER_MAPPING_KEY = "frmApplicationUserSaveButtonPlaceHolder";

	/** The message resource mapping for the help text attached to the saveButton property */  
	public static final String SAVEBUTTON_HELPBLOCK_MAPPING_KEY = "frmApplicationUserSaveButtonHelpBlock";

    
	/** Entity Id */
	private Long id;

	/** localization messages are bound to a particular view allowing the messages for a distinct view to be loaded*/
	private Long viewId;

	
    /** id of a parent object used when adding objects via JSON enabled restful web services */
    private Long parentObjectId;
    
    
    /** the the newLocale setting which is the locale currently being updated */
    private Long newLocale;

    /** the title as displayed in the browser tab */
    private String formTitle;

    /** the page title as displayed at the top of the page */
    private String viewTitle;
    
    /** the form sub header as displayed below the form header */
	private String formSubHeader;
    
    
        
    private String usernameLabelMessageKey;
    private String usernameLabel;

    private String usernamePlaceHolderMessageKey;
    private String usernamePlaceHolder;
    
    private String usernameHelpTextMessageKey;
    private String usernameHelpText;
    
    private String usernameTooltipMessageKey;
    private String usernameTooltip;
    
    private String passwordLabelMessageKey;
    private String passwordLabel;

    private String passwordPlaceHolderMessageKey;
    private String passwordPlaceHolder;
    
    private String passwordHelpTextMessageKey;
    private String passwordHelpText;
    
    private String passwordTooltipMessageKey;
    private String passwordTooltip;
    
    private String enabledLabelMessageKey;
    private String enabledLabel;

    private String enabledPlaceHolderMessageKey;
    private String enabledPlaceHolder;
    
    private String enabledHelpTextMessageKey;
    private String enabledHelpText;
    
    private String enabledTooltipMessageKey;
    private String enabledTooltip;
    
    private String userRolesLabelMessageKey;
    private String userRolesLabel;

    private String userRolesPlaceHolderMessageKey;
    private String userRolesPlaceHolder;
    
    private String userRolesHelpTextMessageKey;
    private String userRolesHelpText;
    
    private String userRolesTooltipMessageKey;
    private String userRolesTooltip;
    
    private String saveButtonLabelMessageKey;
    private String saveButtonLabel;

    private String saveButtonPlaceHolderMessageKey;
    private String saveButtonPlaceHolder;
    
    private String saveButtonHelpTextMessageKey;
    private String saveButtonHelpText;
    
    private String saveButtonTooltipMessageKey;
    private String saveButtonTooltip;

    
    /**
     * Default Constructor for the ApplicationUserTranslationBackingBean
     */
    public ApplicationUserTranslationBackingBeanImpl()
    {
    	setViewId(ApplicationUserTranslationBackingBeanImpl.VIEW_ID);
		usernameLabelMessageKey = "";
		usernameLabel = "";
		usernamePlaceHolderMessageKey = "";
		usernamePlaceHolder = "";
		usernameHelpTextMessageKey = "";
		usernameHelpText = "";
		usernameTooltipMessageKey = "";
		usernameTooltip = "";
		passwordLabelMessageKey = "";
		passwordLabel = "";
		passwordPlaceHolderMessageKey = "";
		passwordPlaceHolder = "";
		passwordHelpTextMessageKey = "";
		passwordHelpText = "";
		passwordTooltipMessageKey = "";
		passwordTooltip = "";
		enabledLabelMessageKey = "";
		enabledLabel = "";
		enabledPlaceHolderMessageKey = "";
		enabledPlaceHolder = "";
		enabledHelpTextMessageKey = "";
		enabledHelpText = "";
		enabledTooltipMessageKey = "";
		enabledTooltip = "";
		userRolesLabelMessageKey = "";
		userRolesLabel = "";
		userRolesPlaceHolderMessageKey = "";
		userRolesPlaceHolder = "";
		userRolesHelpTextMessageKey = "";
		userRolesHelpText = "";
		userRolesTooltipMessageKey = "";
		userRolesTooltip = "";
		saveButtonLabelMessageKey = "";
		saveButtonLabel = "";
		saveButtonPlaceHolderMessageKey = "";
		saveButtonPlaceHolder = "";
		saveButtonHelpTextMessageKey = "";
		saveButtonHelpText = "";
		saveButtonTooltipMessageKey = "";
		saveButtonTooltip = "";

    }
    
    /*
     * Returns the Id for the underlying database table record
     */
	public Long getId()
	{
        return id;
    }

    /*
     * Sets the Id. This allows front-end forms to bind the id property
     */
	public void setId(Long id)
	{
        this.id = id;
    }
    
    /*
     * Returns the viewId to which the current translations are bound
     */
	public Long getViewId()
	{
        return viewId;
    }

    /*
     * Sets the viewId. This allows the page translations to be bound to a view
     */
	public void setViewId(Long viewId)
	{
        this.viewId = viewId;
    }
    

    /*
     * Returns the parentObjectId when this object has been populated via a restful webservice JSON mapping
     */
	public Long getParentObjectId()
	{
        return parentObjectId;
    }

    /*
     * Sets the parentObjectId. This allows restful web services to bind the parentId property when adding a new record.
     */
	public void setParentObjectId(Long parentObjectId)
	{
        this.parentObjectId = parentObjectId;
    }
    
    /*
     * Returns the newLocale setting which is the locale currently being updated
     */
	public Long getNewLocale()
	{
        return newLocale;
    }

    /*
     * Sets the the newLocale setting which is the locale currently being updated
     */
	public void setNewLocale(Long newLocale)
	{
        this.newLocale = newLocale;
    }

    /*
     * Returns the page title as displayed in the browser tab
     */
	public String getFormTitle()
	{
        return formTitle;
    }

    /*
     * Sets the page title as displayed in the browser tab
     */
	public void setFormTitle(String formTitle)
	{
        this.formTitle = formTitle;
    }
    
    
    /*
     * Returns the page title as displayed at the top of the page
     */
	public String getViewTitle()
	{
        return viewTitle;
    }

    /*
     * Sets the page title as displayed at the top of the page
     */
	public void setViewTitle(String viewTitle)
	{
        this.viewTitle = viewTitle;
    }
    

    /*
     * Returns the form sub header as displayed below the form header
     */
	public String getFormSubHeader()
	{
        return formSubHeader;
    }

    /*
     * Sets the form sub header as displayed below the form header
     */
	public void setFormSubHeader(String formSubHeader)
	{
        this.formSubHeader = formSubHeader;
    }
    

	
    
    
    /**
     * Sets the usernameLabelMessageKey
     * @param usernameLabelMessageKey
     */
    public void setUsernameLabelMessageKey(String usernameLabelMessageKey)
    {
      this.usernameLabelMessageKey = usernameLabelMessageKey;
    }

    /**
     * Returns the usernameLabelMessageKey
     * @return the usernameLabelMessageKey
     */
    public String getUsernameLabelMessageKey()
    {
      return usernameLabelMessageKey;
    }

    /**
     * Sets the usernameLabel
     * @param usernameLabel
     */
    public void setUsernameLabel(String usernameLabel)
    {
      this.usernameLabel = usernameLabel;
    }

    /**
     * Returns the usernameLabel
     * @return the usernameLabel
     */
    public String getUsernameLabel()
    {
      return usernameLabel;
    }
    
    
    /**
     * Sets the usernamePlaceHolderMessageKey
     * @param usernamePlaceHolderMessageKey
     */
    public void setUsernamePlaceHolderMessageKey(String usernamePlaceHolderMessageKey)
    {
      this.usernamePlaceHolderMessageKey = usernamePlaceHolderMessageKey;
    }

    /**
     * Returns the usernamePlaceHolderMessageKey
     * @return the usernamePlaceHolderMessageKey
     */
    public String getUsernamePlaceHolderMessageKey()
    {
      return usernamePlaceHolderMessageKey;
    }

    /**
     * Sets the usernamePlaceHolder
     * @param usernamePlaceHolder
     */
    public void setUsernamePlaceHolder(String usernamePlaceHolder)
    {
      this.usernamePlaceHolder = usernamePlaceHolder;
    }

    /**
     * Returns the usernamePlaceHolder
     * @return the usernamePlaceHolder
     */
    public String getUsernamePlaceHolder()
    {
      return usernamePlaceHolder;
    }    
    
    /**
     * Sets the usernameHelpTextMessageKey
     * @param usernameHelpTextMessageKey
     */
    public void setUsernameHelpTextMessageKey(String usernameHelpTextMessageKey)
    {
      this.usernameHelpTextMessageKey = usernameHelpTextMessageKey;
    }

    /**
     * Returns the usernameHelpTextMessageKey
     * @return the usernameHelpTextMessageKey
     */
    public String getUsernameHelpTextMessageKey()
    {
      return usernameHelpTextMessageKey;
    }

    /**
     * Sets the usernameHelpText
     * @param usernameHelpText
     */
    public void setUsernameHelpText(String usernameHelpText)
    {
      this.usernameHelpText = usernameHelpText;
    }

    /**
     * Returns the usernameHelpText
     * @return the usernameHelpText
     */
    public String getUsernameHelpText()
    {
      return usernameHelpText;
    }    
    
    /**
     * Sets the usernameTooltipMessageKey
     * @param usernameTooltipMessageKey
     */
    public void setUsernameTooltipMessageKey(String usernameTooltipMessageKey)
    {
      this.usernameTooltipMessageKey = usernameTooltipMessageKey;
    }

    /**
     * Returns the usernameTooltipMessageKey
     * @return the usernameTooltipMessageKey
     */
    public String getUsernameTooltipMessageKey()
    {
      return usernameTooltipMessageKey;
    }

    /**
     * Sets the usernameTooltip
     * @param usernameTooltip
     */
    public void setUsernameTooltip(String usernameTooltip)
    {
      this.usernameTooltip = usernameTooltip;
    }

    /**
     * Returns the usernameTooltip
     * @return the usernameTooltip
     */
    public String getUsernameTooltip()
    {
      return usernameTooltip;
    }    

    
    /**
     * Sets the passwordLabelMessageKey
     * @param passwordLabelMessageKey
     */
    public void setPasswordLabelMessageKey(String passwordLabelMessageKey)
    {
      this.passwordLabelMessageKey = passwordLabelMessageKey;
    }

    /**
     * Returns the passwordLabelMessageKey
     * @return the passwordLabelMessageKey
     */
    public String getPasswordLabelMessageKey()
    {
      return passwordLabelMessageKey;
    }

    /**
     * Sets the passwordLabel
     * @param passwordLabel
     */
    public void setPasswordLabel(String passwordLabel)
    {
      this.passwordLabel = passwordLabel;
    }

    /**
     * Returns the passwordLabel
     * @return the passwordLabel
     */
    public String getPasswordLabel()
    {
      return passwordLabel;
    }
    
    
    /**
     * Sets the passwordPlaceHolderMessageKey
     * @param passwordPlaceHolderMessageKey
     */
    public void setPasswordPlaceHolderMessageKey(String passwordPlaceHolderMessageKey)
    {
      this.passwordPlaceHolderMessageKey = passwordPlaceHolderMessageKey;
    }

    /**
     * Returns the passwordPlaceHolderMessageKey
     * @return the passwordPlaceHolderMessageKey
     */
    public String getPasswordPlaceHolderMessageKey()
    {
      return passwordPlaceHolderMessageKey;
    }

    /**
     * Sets the passwordPlaceHolder
     * @param passwordPlaceHolder
     */
    public void setPasswordPlaceHolder(String passwordPlaceHolder)
    {
      this.passwordPlaceHolder = passwordPlaceHolder;
    }

    /**
     * Returns the passwordPlaceHolder
     * @return the passwordPlaceHolder
     */
    public String getPasswordPlaceHolder()
    {
      return passwordPlaceHolder;
    }    
    
    /**
     * Sets the passwordHelpTextMessageKey
     * @param passwordHelpTextMessageKey
     */
    public void setPasswordHelpTextMessageKey(String passwordHelpTextMessageKey)
    {
      this.passwordHelpTextMessageKey = passwordHelpTextMessageKey;
    }

    /**
     * Returns the passwordHelpTextMessageKey
     * @return the passwordHelpTextMessageKey
     */
    public String getPasswordHelpTextMessageKey()
    {
      return passwordHelpTextMessageKey;
    }

    /**
     * Sets the passwordHelpText
     * @param passwordHelpText
     */
    public void setPasswordHelpText(String passwordHelpText)
    {
      this.passwordHelpText = passwordHelpText;
    }

    /**
     * Returns the passwordHelpText
     * @return the passwordHelpText
     */
    public String getPasswordHelpText()
    {
      return passwordHelpText;
    }    
    
    /**
     * Sets the passwordTooltipMessageKey
     * @param passwordTooltipMessageKey
     */
    public void setPasswordTooltipMessageKey(String passwordTooltipMessageKey)
    {
      this.passwordTooltipMessageKey = passwordTooltipMessageKey;
    }

    /**
     * Returns the passwordTooltipMessageKey
     * @return the passwordTooltipMessageKey
     */
    public String getPasswordTooltipMessageKey()
    {
      return passwordTooltipMessageKey;
    }

    /**
     * Sets the passwordTooltip
     * @param passwordTooltip
     */
    public void setPasswordTooltip(String passwordTooltip)
    {
      this.passwordTooltip = passwordTooltip;
    }

    /**
     * Returns the passwordTooltip
     * @return the passwordTooltip
     */
    public String getPasswordTooltip()
    {
      return passwordTooltip;
    }    

    
    /**
     * Sets the enabledLabelMessageKey
     * @param enabledLabelMessageKey
     */
    public void setEnabledLabelMessageKey(String enabledLabelMessageKey)
    {
      this.enabledLabelMessageKey = enabledLabelMessageKey;
    }

    /**
     * Returns the enabledLabelMessageKey
     * @return the enabledLabelMessageKey
     */
    public String getEnabledLabelMessageKey()
    {
      return enabledLabelMessageKey;
    }

    /**
     * Sets the enabledLabel
     * @param enabledLabel
     */
    public void setEnabledLabel(String enabledLabel)
    {
      this.enabledLabel = enabledLabel;
    }

    /**
     * Returns the enabledLabel
     * @return the enabledLabel
     */
    public String getEnabledLabel()
    {
      return enabledLabel;
    }
    
    
    /**
     * Sets the enabledPlaceHolderMessageKey
     * @param enabledPlaceHolderMessageKey
     */
    public void setEnabledPlaceHolderMessageKey(String enabledPlaceHolderMessageKey)
    {
      this.enabledPlaceHolderMessageKey = enabledPlaceHolderMessageKey;
    }

    /**
     * Returns the enabledPlaceHolderMessageKey
     * @return the enabledPlaceHolderMessageKey
     */
    public String getEnabledPlaceHolderMessageKey()
    {
      return enabledPlaceHolderMessageKey;
    }

    /**
     * Sets the enabledPlaceHolder
     * @param enabledPlaceHolder
     */
    public void setEnabledPlaceHolder(String enabledPlaceHolder)
    {
      this.enabledPlaceHolder = enabledPlaceHolder;
    }

    /**
     * Returns the enabledPlaceHolder
     * @return the enabledPlaceHolder
     */
    public String getEnabledPlaceHolder()
    {
      return enabledPlaceHolder;
    }    
    
    /**
     * Sets the enabledHelpTextMessageKey
     * @param enabledHelpTextMessageKey
     */
    public void setEnabledHelpTextMessageKey(String enabledHelpTextMessageKey)
    {
      this.enabledHelpTextMessageKey = enabledHelpTextMessageKey;
    }

    /**
     * Returns the enabledHelpTextMessageKey
     * @return the enabledHelpTextMessageKey
     */
    public String getEnabledHelpTextMessageKey()
    {
      return enabledHelpTextMessageKey;
    }

    /**
     * Sets the enabledHelpText
     * @param enabledHelpText
     */
    public void setEnabledHelpText(String enabledHelpText)
    {
      this.enabledHelpText = enabledHelpText;
    }

    /**
     * Returns the enabledHelpText
     * @return the enabledHelpText
     */
    public String getEnabledHelpText()
    {
      return enabledHelpText;
    }    
    
    /**
     * Sets the enabledTooltipMessageKey
     * @param enabledTooltipMessageKey
     */
    public void setEnabledTooltipMessageKey(String enabledTooltipMessageKey)
    {
      this.enabledTooltipMessageKey = enabledTooltipMessageKey;
    }

    /**
     * Returns the enabledTooltipMessageKey
     * @return the enabledTooltipMessageKey
     */
    public String getEnabledTooltipMessageKey()
    {
      return enabledTooltipMessageKey;
    }

    /**
     * Sets the enabledTooltip
     * @param enabledTooltip
     */
    public void setEnabledTooltip(String enabledTooltip)
    {
      this.enabledTooltip = enabledTooltip;
    }

    /**
     * Returns the enabledTooltip
     * @return the enabledTooltip
     */
    public String getEnabledTooltip()
    {
      return enabledTooltip;
    }    

    
    /**
     * Sets the userRolesLabelMessageKey
     * @param userRolesLabelMessageKey
     */
    public void setUserRolesLabelMessageKey(String userRolesLabelMessageKey)
    {
      this.userRolesLabelMessageKey = userRolesLabelMessageKey;
    }

    /**
     * Returns the userRolesLabelMessageKey
     * @return the userRolesLabelMessageKey
     */
    public String getUserRolesLabelMessageKey()
    {
      return userRolesLabelMessageKey;
    }

    /**
     * Sets the userRolesLabel
     * @param userRolesLabel
     */
    public void setUserRolesLabel(String userRolesLabel)
    {
      this.userRolesLabel = userRolesLabel;
    }

    /**
     * Returns the userRolesLabel
     * @return the userRolesLabel
     */
    public String getUserRolesLabel()
    {
      return userRolesLabel;
    }
    
    
    /**
     * Sets the userRolesPlaceHolderMessageKey
     * @param userRolesPlaceHolderMessageKey
     */
    public void setUserRolesPlaceHolderMessageKey(String userRolesPlaceHolderMessageKey)
    {
      this.userRolesPlaceHolderMessageKey = userRolesPlaceHolderMessageKey;
    }

    /**
     * Returns the userRolesPlaceHolderMessageKey
     * @return the userRolesPlaceHolderMessageKey
     */
    public String getUserRolesPlaceHolderMessageKey()
    {
      return userRolesPlaceHolderMessageKey;
    }

    /**
     * Sets the userRolesPlaceHolder
     * @param userRolesPlaceHolder
     */
    public void setUserRolesPlaceHolder(String userRolesPlaceHolder)
    {
      this.userRolesPlaceHolder = userRolesPlaceHolder;
    }

    /**
     * Returns the userRolesPlaceHolder
     * @return the userRolesPlaceHolder
     */
    public String getUserRolesPlaceHolder()
    {
      return userRolesPlaceHolder;
    }    
    
    /**
     * Sets the userRolesHelpTextMessageKey
     * @param userRolesHelpTextMessageKey
     */
    public void setUserRolesHelpTextMessageKey(String userRolesHelpTextMessageKey)
    {
      this.userRolesHelpTextMessageKey = userRolesHelpTextMessageKey;
    }

    /**
     * Returns the userRolesHelpTextMessageKey
     * @return the userRolesHelpTextMessageKey
     */
    public String getUserRolesHelpTextMessageKey()
    {
      return userRolesHelpTextMessageKey;
    }

    /**
     * Sets the userRolesHelpText
     * @param userRolesHelpText
     */
    public void setUserRolesHelpText(String userRolesHelpText)
    {
      this.userRolesHelpText = userRolesHelpText;
    }

    /**
     * Returns the userRolesHelpText
     * @return the userRolesHelpText
     */
    public String getUserRolesHelpText()
    {
      return userRolesHelpText;
    }    
    
    /**
     * Sets the userRolesTooltipMessageKey
     * @param userRolesTooltipMessageKey
     */
    public void setUserRolesTooltipMessageKey(String userRolesTooltipMessageKey)
    {
      this.userRolesTooltipMessageKey = userRolesTooltipMessageKey;
    }

    /**
     * Returns the userRolesTooltipMessageKey
     * @return the userRolesTooltipMessageKey
     */
    public String getUserRolesTooltipMessageKey()
    {
      return userRolesTooltipMessageKey;
    }

    /**
     * Sets the userRolesTooltip
     * @param userRolesTooltip
     */
    public void setUserRolesTooltip(String userRolesTooltip)
    {
      this.userRolesTooltip = userRolesTooltip;
    }

    /**
     * Returns the userRolesTooltip
     * @return the userRolesTooltip
     */
    public String getUserRolesTooltip()
    {
      return userRolesTooltip;
    }    

    
    /**
     * Sets the saveButtonLabelMessageKey
     * @param saveButtonLabelMessageKey
     */
    public void setSaveButtonLabelMessageKey(String saveButtonLabelMessageKey)
    {
      this.saveButtonLabelMessageKey = saveButtonLabelMessageKey;
    }

    /**
     * Returns the saveButtonLabelMessageKey
     * @return the saveButtonLabelMessageKey
     */
    public String getSaveButtonLabelMessageKey()
    {
      return saveButtonLabelMessageKey;
    }

    /**
     * Sets the saveButtonLabel
     * @param saveButtonLabel
     */
    public void setSaveButtonLabel(String saveButtonLabel)
    {
      this.saveButtonLabel = saveButtonLabel;
    }

    /**
     * Returns the saveButtonLabel
     * @return the saveButtonLabel
     */
    public String getSaveButtonLabel()
    {
      return saveButtonLabel;
    }
    
    
    /**
     * Sets the saveButtonPlaceHolderMessageKey
     * @param saveButtonPlaceHolderMessageKey
     */
    public void setSaveButtonPlaceHolderMessageKey(String saveButtonPlaceHolderMessageKey)
    {
      this.saveButtonPlaceHolderMessageKey = saveButtonPlaceHolderMessageKey;
    }

    /**
     * Returns the saveButtonPlaceHolderMessageKey
     * @return the saveButtonPlaceHolderMessageKey
     */
    public String getSaveButtonPlaceHolderMessageKey()
    {
      return saveButtonPlaceHolderMessageKey;
    }

    /**
     * Sets the saveButtonPlaceHolder
     * @param saveButtonPlaceHolder
     */
    public void setSaveButtonPlaceHolder(String saveButtonPlaceHolder)
    {
      this.saveButtonPlaceHolder = saveButtonPlaceHolder;
    }

    /**
     * Returns the saveButtonPlaceHolder
     * @return the saveButtonPlaceHolder
     */
    public String getSaveButtonPlaceHolder()
    {
      return saveButtonPlaceHolder;
    }    
    
    /**
     * Sets the saveButtonHelpTextMessageKey
     * @param saveButtonHelpTextMessageKey
     */
    public void setSaveButtonHelpTextMessageKey(String saveButtonHelpTextMessageKey)
    {
      this.saveButtonHelpTextMessageKey = saveButtonHelpTextMessageKey;
    }

    /**
     * Returns the saveButtonHelpTextMessageKey
     * @return the saveButtonHelpTextMessageKey
     */
    public String getSaveButtonHelpTextMessageKey()
    {
      return saveButtonHelpTextMessageKey;
    }

    /**
     * Sets the saveButtonHelpText
     * @param saveButtonHelpText
     */
    public void setSaveButtonHelpText(String saveButtonHelpText)
    {
      this.saveButtonHelpText = saveButtonHelpText;
    }

    /**
     * Returns the saveButtonHelpText
     * @return the saveButtonHelpText
     */
    public String getSaveButtonHelpText()
    {
      return saveButtonHelpText;
    }    
    
    /**
     * Sets the saveButtonTooltipMessageKey
     * @param saveButtonTooltipMessageKey
     */
    public void setSaveButtonTooltipMessageKey(String saveButtonTooltipMessageKey)
    {
      this.saveButtonTooltipMessageKey = saveButtonTooltipMessageKey;
    }

    /**
     * Returns the saveButtonTooltipMessageKey
     * @return the saveButtonTooltipMessageKey
     */
    public String getSaveButtonTooltipMessageKey()
    {
      return saveButtonTooltipMessageKey;
    }

    /**
     * Sets the saveButtonTooltip
     * @param saveButtonTooltip
     */
    public void setSaveButtonTooltip(String saveButtonTooltip)
    {
      this.saveButtonTooltip = saveButtonTooltip;
    }

    /**
     * Returns the saveButtonTooltip
     * @return the saveButtonTooltip
     */
    public String getSaveButtonTooltip()
    {
      return saveButtonTooltip;
    }    


    /**
     * Checks for a newly created entity object
     * @return true if this is a newly created entity object meaning that it has not yet been persisted, otherwise false
     */
	public boolean isNew() {
		return (this.id == null);
	}
	
    
    
/*     @Override
     public String toString(){
     // TODO: To be implemented
    	return "TODO: to be done";
     }
*/     
}
    
    
    

