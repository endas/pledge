package org.volunteertech.pledges.reference.view;

import org.volunteertech.pledges.reference.dao.ReferenceCategoryImpl;
import java.io.Serializable;


import org.volunteertech.pledges.reference.dao.Reference;




/**
 * The reference category screen is used to add/edit new/existing reference category entries. The reference entries are used to populate dropdowns where a group of reference entries with a common column-value can be associated with a dropdown.
 * The ReferenceCategoryTranslationBacking Bean supports the localisation of the ReferenceCategory Screen
 * This class has been generated by the XSLT processor from the metadata and represents the
 * DataBase access handler for the ReferenceCategory entity.
 * <P> 
 * It is essential that methods added to this class are given JavaDoc comments to allow
 * documentation to be generated. For a description of JavaDoc refer to The JavaDoc documentation.
 * A link is provided below.
 * <P>
 * @author Michael O'Connor
 * @version $Revision$
 * Date: $Date$
 * @see <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/index.html">JavaDoc Documentation</a> 
 * Change Log
 * ----------
 * $Log$
 *
 */
public class ReferenceCategoryTranslationBackingBeanImpl extends ReferenceCategoryImpl implements ReferenceCategoryTranslationBackingBean, Serializable { 

    private static final long serialVersionUID = 1L;
    
    /** The identifier for the Reference Categories view */
    public static final Long VIEW_ID = new Long(6);
    
    /** The mapping key for the page title as displayed in the browser tab */
    public static String REFERENCECATEGORY_TITLE_MAPPING_KEY = "referencecategory.form.title";
    
    /** The mapping key for the page header text as displayed at the top of the page */
    public static String REFERENCECATEGORY_HEADER_MAPPING_KEY = "referencecategory.form.header";
    
    /** The mapping key for the form sub header */
    public static String REFERENCECATEGORY_SUBHEADER_MAPPING_KEY = "referencecategory.form.subheader";
    
    
	/** The message resource mapping for the Label attached to the referenceCategoryDesc property */  
	public static final String REFERENCECATEGORYDESC_LABEL_MAPPING_KEY = "frmReferenceCategoryReferenceCategoryDescLabel";
	
	/** The message resource mapping for the place holder attached to the referenceCategoryDesc property */  
	public static final String REFERENCECATEGORYDESC_PLACEHOLDER_MAPPING_KEY = "frmReferenceCategoryReferenceCategoryDescPlaceHolder";

	/** The message resource mapping for the help text attached to the referenceCategoryDesc property */  
	public static final String REFERENCECATEGORYDESC_HELPBLOCK_MAPPING_KEY = "frmReferenceCategoryReferenceCategoryDescHelpBlock";

	/** The message resource mapping for the Label attached to the parentCategoryId property */  
	public static final String PARENTCATEGORYID_LABEL_MAPPING_KEY = "frmReferenceCategoryParentCategoryIdLabel";
	
	/** The message resource mapping for the place holder attached to the parentCategoryId property */  
	public static final String PARENTCATEGORYID_PLACEHOLDER_MAPPING_KEY = "frmReferenceCategoryParentCategoryIdPlaceHolder";

	/** The message resource mapping for the help text attached to the parentCategoryId property */  
	public static final String PARENTCATEGORYID_HELPBLOCK_MAPPING_KEY = "frmReferenceCategoryParentCategoryIdHelpBlock";

	/** The message resource mapping for the Label attached to the description property */  
	public static final String DESCRIPTION_LABEL_MAPPING_KEY = "frmReferenceCategoryDescriptionLabel";
	
	/** The message resource mapping for the place holder attached to the description property */  
	public static final String DESCRIPTION_PLACEHOLDER_MAPPING_KEY = "frmReferenceCategoryDescriptionPlaceHolder";

	/** The message resource mapping for the help text attached to the description property */  
	public static final String DESCRIPTION_HELPBLOCK_MAPPING_KEY = "frmReferenceCategoryDescriptionHelpBlock";

	/** The message resource mapping for the Label attached to the saveButton property */  
	public static final String SAVEBUTTON_LABEL_MAPPING_KEY = "frmReferenceCategorySaveButtonLabel";
	
	/** The message resource mapping for the place holder attached to the saveButton property */  
	public static final String SAVEBUTTON_PLACEHOLDER_MAPPING_KEY = "frmReferenceCategorySaveButtonPlaceHolder";

	/** The message resource mapping for the help text attached to the saveButton property */  
	public static final String SAVEBUTTON_HELPBLOCK_MAPPING_KEY = "frmReferenceCategorySaveButtonHelpBlock";

    
	/** Entity Id */
	private Long id;

	/** localization messages are bound to a particular view allowing the messages for a distinct view to be loaded*/
	private Long viewId;

	
    /** id of a parent object used when adding objects via JSON enabled restful web services */
    private Long parentObjectId;
    
    
    /** the the newLocale setting which is the locale currently being updated */
    private Long newLocale;

    /** the title as displayed in the browser tab */
    private String formTitle;

    /** the page title as displayed at the top of the page */
    private String viewTitle;
    
    /** the form sub header as displayed below the form header */
	private String formSubHeader;
    
    
        
    private String referenceCategoryDescLabelMessageKey;
    private String referenceCategoryDescLabel;

    private String referenceCategoryDescPlaceHolderMessageKey;
    private String referenceCategoryDescPlaceHolder;
    
    private String referenceCategoryDescHelpTextMessageKey;
    private String referenceCategoryDescHelpText;
    
    private String referenceCategoryDescTooltipMessageKey;
    private String referenceCategoryDescTooltip;
    
    private String parentCategoryIdLabelMessageKey;
    private String parentCategoryIdLabel;

    private String parentCategoryIdPlaceHolderMessageKey;
    private String parentCategoryIdPlaceHolder;
    
    private String parentCategoryIdHelpTextMessageKey;
    private String parentCategoryIdHelpText;
    
    private String parentCategoryIdTooltipMessageKey;
    private String parentCategoryIdTooltip;
    
    private String descriptionLabelMessageKey;
    private String descriptionLabel;

    private String descriptionPlaceHolderMessageKey;
    private String descriptionPlaceHolder;
    
    private String descriptionHelpTextMessageKey;
    private String descriptionHelpText;
    
    private String descriptionTooltipMessageKey;
    private String descriptionTooltip;
    
    private String saveButtonLabelMessageKey;
    private String saveButtonLabel;

    private String saveButtonPlaceHolderMessageKey;
    private String saveButtonPlaceHolder;
    
    private String saveButtonHelpTextMessageKey;
    private String saveButtonHelpText;
    
    private String saveButtonTooltipMessageKey;
    private String saveButtonTooltip;

    
    /**
     * Default Constructor for the ReferenceCategoryTranslationBackingBean
     */
    public ReferenceCategoryTranslationBackingBeanImpl()
    {
    	setViewId(ReferenceCategoryTranslationBackingBeanImpl.VIEW_ID);
		referenceCategoryDescLabelMessageKey = "";
		referenceCategoryDescLabel = "";
		referenceCategoryDescPlaceHolderMessageKey = "";
		referenceCategoryDescPlaceHolder = "";
		referenceCategoryDescHelpTextMessageKey = "";
		referenceCategoryDescHelpText = "";
		referenceCategoryDescTooltipMessageKey = "";
		referenceCategoryDescTooltip = "";
		parentCategoryIdLabelMessageKey = "";
		parentCategoryIdLabel = "";
		parentCategoryIdPlaceHolderMessageKey = "";
		parentCategoryIdPlaceHolder = "";
		parentCategoryIdHelpTextMessageKey = "";
		parentCategoryIdHelpText = "";
		parentCategoryIdTooltipMessageKey = "";
		parentCategoryIdTooltip = "";
		descriptionLabelMessageKey = "";
		descriptionLabel = "";
		descriptionPlaceHolderMessageKey = "";
		descriptionPlaceHolder = "";
		descriptionHelpTextMessageKey = "";
		descriptionHelpText = "";
		descriptionTooltipMessageKey = "";
		descriptionTooltip = "";
		saveButtonLabelMessageKey = "";
		saveButtonLabel = "";
		saveButtonPlaceHolderMessageKey = "";
		saveButtonPlaceHolder = "";
		saveButtonHelpTextMessageKey = "";
		saveButtonHelpText = "";
		saveButtonTooltipMessageKey = "";
		saveButtonTooltip = "";

    }
    
    /*
     * Returns the Id for the underlying database table record
     */
	public Long getId()
	{
        return id;
    }

    /*
     * Sets the Id. This allows front-end forms to bind the id property
     */
	public void setId(Long id)
	{
        this.id = id;
    }
    
    /*
     * Returns the viewId to which the current translations are bound
     */
	public Long getViewId()
	{
        return viewId;
    }

    /*
     * Sets the viewId. This allows the page translations to be bound to a view
     */
	public void setViewId(Long viewId)
	{
        this.viewId = viewId;
    }
    

    /*
     * Returns the parentObjectId when this object has been populated via a restful webservice JSON mapping
     */
	public Long getParentObjectId()
	{
        return parentObjectId;
    }

    /*
     * Sets the parentObjectId. This allows restful web services to bind the parentId property when adding a new record.
     */
	public void setParentObjectId(Long parentObjectId)
	{
        this.parentObjectId = parentObjectId;
    }
    
    /*
     * Returns the newLocale setting which is the locale currently being updated
     */
	public Long getNewLocale()
	{
        return newLocale;
    }

    /*
     * Sets the the newLocale setting which is the locale currently being updated
     */
	public void setNewLocale(Long newLocale)
	{
        this.newLocale = newLocale;
    }

    /*
     * Returns the page title as displayed in the browser tab
     */
	public String getFormTitle()
	{
        return formTitle;
    }

    /*
     * Sets the page title as displayed in the browser tab
     */
	public void setFormTitle(String formTitle)
	{
        this.formTitle = formTitle;
    }
    
    
    /*
     * Returns the page title as displayed at the top of the page
     */
	public String getViewTitle()
	{
        return viewTitle;
    }

    /*
     * Sets the page title as displayed at the top of the page
     */
	public void setViewTitle(String viewTitle)
	{
        this.viewTitle = viewTitle;
    }
    

    /*
     * Returns the form sub header as displayed below the form header
     */
	public String getFormSubHeader()
	{
        return formSubHeader;
    }

    /*
     * Sets the form sub header as displayed below the form header
     */
	public void setFormSubHeader(String formSubHeader)
	{
        this.formSubHeader = formSubHeader;
    }
    

	
    
    
    /**
     * Sets the referenceCategoryDescLabelMessageKey
     * @param referenceCategoryDescLabelMessageKey
     */
    public void setReferenceCategoryDescLabelMessageKey(String referenceCategoryDescLabelMessageKey)
    {
      this.referenceCategoryDescLabelMessageKey = referenceCategoryDescLabelMessageKey;
    }

    /**
     * Returns the referenceCategoryDescLabelMessageKey
     * @return the referenceCategoryDescLabelMessageKey
     */
    public String getReferenceCategoryDescLabelMessageKey()
    {
      return referenceCategoryDescLabelMessageKey;
    }

    /**
     * Sets the referenceCategoryDescLabel
     * @param referenceCategoryDescLabel
     */
    public void setReferenceCategoryDescLabel(String referenceCategoryDescLabel)
    {
      this.referenceCategoryDescLabel = referenceCategoryDescLabel;
    }

    /**
     * Returns the referenceCategoryDescLabel
     * @return the referenceCategoryDescLabel
     */
    public String getReferenceCategoryDescLabel()
    {
      return referenceCategoryDescLabel;
    }
    
    
    /**
     * Sets the referenceCategoryDescPlaceHolderMessageKey
     * @param referenceCategoryDescPlaceHolderMessageKey
     */
    public void setReferenceCategoryDescPlaceHolderMessageKey(String referenceCategoryDescPlaceHolderMessageKey)
    {
      this.referenceCategoryDescPlaceHolderMessageKey = referenceCategoryDescPlaceHolderMessageKey;
    }

    /**
     * Returns the referenceCategoryDescPlaceHolderMessageKey
     * @return the referenceCategoryDescPlaceHolderMessageKey
     */
    public String getReferenceCategoryDescPlaceHolderMessageKey()
    {
      return referenceCategoryDescPlaceHolderMessageKey;
    }

    /**
     * Sets the referenceCategoryDescPlaceHolder
     * @param referenceCategoryDescPlaceHolder
     */
    public void setReferenceCategoryDescPlaceHolder(String referenceCategoryDescPlaceHolder)
    {
      this.referenceCategoryDescPlaceHolder = referenceCategoryDescPlaceHolder;
    }

    /**
     * Returns the referenceCategoryDescPlaceHolder
     * @return the referenceCategoryDescPlaceHolder
     */
    public String getReferenceCategoryDescPlaceHolder()
    {
      return referenceCategoryDescPlaceHolder;
    }    
    
    /**
     * Sets the referenceCategoryDescHelpTextMessageKey
     * @param referenceCategoryDescHelpTextMessageKey
     */
    public void setReferenceCategoryDescHelpTextMessageKey(String referenceCategoryDescHelpTextMessageKey)
    {
      this.referenceCategoryDescHelpTextMessageKey = referenceCategoryDescHelpTextMessageKey;
    }

    /**
     * Returns the referenceCategoryDescHelpTextMessageKey
     * @return the referenceCategoryDescHelpTextMessageKey
     */
    public String getReferenceCategoryDescHelpTextMessageKey()
    {
      return referenceCategoryDescHelpTextMessageKey;
    }

    /**
     * Sets the referenceCategoryDescHelpText
     * @param referenceCategoryDescHelpText
     */
    public void setReferenceCategoryDescHelpText(String referenceCategoryDescHelpText)
    {
      this.referenceCategoryDescHelpText = referenceCategoryDescHelpText;
    }

    /**
     * Returns the referenceCategoryDescHelpText
     * @return the referenceCategoryDescHelpText
     */
    public String getReferenceCategoryDescHelpText()
    {
      return referenceCategoryDescHelpText;
    }    
    
    /**
     * Sets the referenceCategoryDescTooltipMessageKey
     * @param referenceCategoryDescTooltipMessageKey
     */
    public void setReferenceCategoryDescTooltipMessageKey(String referenceCategoryDescTooltipMessageKey)
    {
      this.referenceCategoryDescTooltipMessageKey = referenceCategoryDescTooltipMessageKey;
    }

    /**
     * Returns the referenceCategoryDescTooltipMessageKey
     * @return the referenceCategoryDescTooltipMessageKey
     */
    public String getReferenceCategoryDescTooltipMessageKey()
    {
      return referenceCategoryDescTooltipMessageKey;
    }

    /**
     * Sets the referenceCategoryDescTooltip
     * @param referenceCategoryDescTooltip
     */
    public void setReferenceCategoryDescTooltip(String referenceCategoryDescTooltip)
    {
      this.referenceCategoryDescTooltip = referenceCategoryDescTooltip;
    }

    /**
     * Returns the referenceCategoryDescTooltip
     * @return the referenceCategoryDescTooltip
     */
    public String getReferenceCategoryDescTooltip()
    {
      return referenceCategoryDescTooltip;
    }    

    
    /**
     * Sets the parentCategoryIdLabelMessageKey
     * @param parentCategoryIdLabelMessageKey
     */
    public void setParentCategoryIdLabelMessageKey(String parentCategoryIdLabelMessageKey)
    {
      this.parentCategoryIdLabelMessageKey = parentCategoryIdLabelMessageKey;
    }

    /**
     * Returns the parentCategoryIdLabelMessageKey
     * @return the parentCategoryIdLabelMessageKey
     */
    public String getParentCategoryIdLabelMessageKey()
    {
      return parentCategoryIdLabelMessageKey;
    }

    /**
     * Sets the parentCategoryIdLabel
     * @param parentCategoryIdLabel
     */
    public void setParentCategoryIdLabel(String parentCategoryIdLabel)
    {
      this.parentCategoryIdLabel = parentCategoryIdLabel;
    }

    /**
     * Returns the parentCategoryIdLabel
     * @return the parentCategoryIdLabel
     */
    public String getParentCategoryIdLabel()
    {
      return parentCategoryIdLabel;
    }
    
    
    /**
     * Sets the parentCategoryIdPlaceHolderMessageKey
     * @param parentCategoryIdPlaceHolderMessageKey
     */
    public void setParentCategoryIdPlaceHolderMessageKey(String parentCategoryIdPlaceHolderMessageKey)
    {
      this.parentCategoryIdPlaceHolderMessageKey = parentCategoryIdPlaceHolderMessageKey;
    }

    /**
     * Returns the parentCategoryIdPlaceHolderMessageKey
     * @return the parentCategoryIdPlaceHolderMessageKey
     */
    public String getParentCategoryIdPlaceHolderMessageKey()
    {
      return parentCategoryIdPlaceHolderMessageKey;
    }

    /**
     * Sets the parentCategoryIdPlaceHolder
     * @param parentCategoryIdPlaceHolder
     */
    public void setParentCategoryIdPlaceHolder(String parentCategoryIdPlaceHolder)
    {
      this.parentCategoryIdPlaceHolder = parentCategoryIdPlaceHolder;
    }

    /**
     * Returns the parentCategoryIdPlaceHolder
     * @return the parentCategoryIdPlaceHolder
     */
    public String getParentCategoryIdPlaceHolder()
    {
      return parentCategoryIdPlaceHolder;
    }    
    
    /**
     * Sets the parentCategoryIdHelpTextMessageKey
     * @param parentCategoryIdHelpTextMessageKey
     */
    public void setParentCategoryIdHelpTextMessageKey(String parentCategoryIdHelpTextMessageKey)
    {
      this.parentCategoryIdHelpTextMessageKey = parentCategoryIdHelpTextMessageKey;
    }

    /**
     * Returns the parentCategoryIdHelpTextMessageKey
     * @return the parentCategoryIdHelpTextMessageKey
     */
    public String getParentCategoryIdHelpTextMessageKey()
    {
      return parentCategoryIdHelpTextMessageKey;
    }

    /**
     * Sets the parentCategoryIdHelpText
     * @param parentCategoryIdHelpText
     */
    public void setParentCategoryIdHelpText(String parentCategoryIdHelpText)
    {
      this.parentCategoryIdHelpText = parentCategoryIdHelpText;
    }

    /**
     * Returns the parentCategoryIdHelpText
     * @return the parentCategoryIdHelpText
     */
    public String getParentCategoryIdHelpText()
    {
      return parentCategoryIdHelpText;
    }    
    
    /**
     * Sets the parentCategoryIdTooltipMessageKey
     * @param parentCategoryIdTooltipMessageKey
     */
    public void setParentCategoryIdTooltipMessageKey(String parentCategoryIdTooltipMessageKey)
    {
      this.parentCategoryIdTooltipMessageKey = parentCategoryIdTooltipMessageKey;
    }

    /**
     * Returns the parentCategoryIdTooltipMessageKey
     * @return the parentCategoryIdTooltipMessageKey
     */
    public String getParentCategoryIdTooltipMessageKey()
    {
      return parentCategoryIdTooltipMessageKey;
    }

    /**
     * Sets the parentCategoryIdTooltip
     * @param parentCategoryIdTooltip
     */
    public void setParentCategoryIdTooltip(String parentCategoryIdTooltip)
    {
      this.parentCategoryIdTooltip = parentCategoryIdTooltip;
    }

    /**
     * Returns the parentCategoryIdTooltip
     * @return the parentCategoryIdTooltip
     */
    public String getParentCategoryIdTooltip()
    {
      return parentCategoryIdTooltip;
    }    

    
    /**
     * Sets the descriptionLabelMessageKey
     * @param descriptionLabelMessageKey
     */
    public void setDescriptionLabelMessageKey(String descriptionLabelMessageKey)
    {
      this.descriptionLabelMessageKey = descriptionLabelMessageKey;
    }

    /**
     * Returns the descriptionLabelMessageKey
     * @return the descriptionLabelMessageKey
     */
    public String getDescriptionLabelMessageKey()
    {
      return descriptionLabelMessageKey;
    }

    /**
     * Sets the descriptionLabel
     * @param descriptionLabel
     */
    public void setDescriptionLabel(String descriptionLabel)
    {
      this.descriptionLabel = descriptionLabel;
    }

    /**
     * Returns the descriptionLabel
     * @return the descriptionLabel
     */
    public String getDescriptionLabel()
    {
      return descriptionLabel;
    }
    
    
    /**
     * Sets the descriptionPlaceHolderMessageKey
     * @param descriptionPlaceHolderMessageKey
     */
    public void setDescriptionPlaceHolderMessageKey(String descriptionPlaceHolderMessageKey)
    {
      this.descriptionPlaceHolderMessageKey = descriptionPlaceHolderMessageKey;
    }

    /**
     * Returns the descriptionPlaceHolderMessageKey
     * @return the descriptionPlaceHolderMessageKey
     */
    public String getDescriptionPlaceHolderMessageKey()
    {
      return descriptionPlaceHolderMessageKey;
    }

    /**
     * Sets the descriptionPlaceHolder
     * @param descriptionPlaceHolder
     */
    public void setDescriptionPlaceHolder(String descriptionPlaceHolder)
    {
      this.descriptionPlaceHolder = descriptionPlaceHolder;
    }

    /**
     * Returns the descriptionPlaceHolder
     * @return the descriptionPlaceHolder
     */
    public String getDescriptionPlaceHolder()
    {
      return descriptionPlaceHolder;
    }    
    
    /**
     * Sets the descriptionHelpTextMessageKey
     * @param descriptionHelpTextMessageKey
     */
    public void setDescriptionHelpTextMessageKey(String descriptionHelpTextMessageKey)
    {
      this.descriptionHelpTextMessageKey = descriptionHelpTextMessageKey;
    }

    /**
     * Returns the descriptionHelpTextMessageKey
     * @return the descriptionHelpTextMessageKey
     */
    public String getDescriptionHelpTextMessageKey()
    {
      return descriptionHelpTextMessageKey;
    }

    /**
     * Sets the descriptionHelpText
     * @param descriptionHelpText
     */
    public void setDescriptionHelpText(String descriptionHelpText)
    {
      this.descriptionHelpText = descriptionHelpText;
    }

    /**
     * Returns the descriptionHelpText
     * @return the descriptionHelpText
     */
    public String getDescriptionHelpText()
    {
      return descriptionHelpText;
    }    
    
    /**
     * Sets the descriptionTooltipMessageKey
     * @param descriptionTooltipMessageKey
     */
    public void setDescriptionTooltipMessageKey(String descriptionTooltipMessageKey)
    {
      this.descriptionTooltipMessageKey = descriptionTooltipMessageKey;
    }

    /**
     * Returns the descriptionTooltipMessageKey
     * @return the descriptionTooltipMessageKey
     */
    public String getDescriptionTooltipMessageKey()
    {
      return descriptionTooltipMessageKey;
    }

    /**
     * Sets the descriptionTooltip
     * @param descriptionTooltip
     */
    public void setDescriptionTooltip(String descriptionTooltip)
    {
      this.descriptionTooltip = descriptionTooltip;
    }

    /**
     * Returns the descriptionTooltip
     * @return the descriptionTooltip
     */
    public String getDescriptionTooltip()
    {
      return descriptionTooltip;
    }    

    
    /**
     * Sets the saveButtonLabelMessageKey
     * @param saveButtonLabelMessageKey
     */
    public void setSaveButtonLabelMessageKey(String saveButtonLabelMessageKey)
    {
      this.saveButtonLabelMessageKey = saveButtonLabelMessageKey;
    }

    /**
     * Returns the saveButtonLabelMessageKey
     * @return the saveButtonLabelMessageKey
     */
    public String getSaveButtonLabelMessageKey()
    {
      return saveButtonLabelMessageKey;
    }

    /**
     * Sets the saveButtonLabel
     * @param saveButtonLabel
     */
    public void setSaveButtonLabel(String saveButtonLabel)
    {
      this.saveButtonLabel = saveButtonLabel;
    }

    /**
     * Returns the saveButtonLabel
     * @return the saveButtonLabel
     */
    public String getSaveButtonLabel()
    {
      return saveButtonLabel;
    }
    
    
    /**
     * Sets the saveButtonPlaceHolderMessageKey
     * @param saveButtonPlaceHolderMessageKey
     */
    public void setSaveButtonPlaceHolderMessageKey(String saveButtonPlaceHolderMessageKey)
    {
      this.saveButtonPlaceHolderMessageKey = saveButtonPlaceHolderMessageKey;
    }

    /**
     * Returns the saveButtonPlaceHolderMessageKey
     * @return the saveButtonPlaceHolderMessageKey
     */
    public String getSaveButtonPlaceHolderMessageKey()
    {
      return saveButtonPlaceHolderMessageKey;
    }

    /**
     * Sets the saveButtonPlaceHolder
     * @param saveButtonPlaceHolder
     */
    public void setSaveButtonPlaceHolder(String saveButtonPlaceHolder)
    {
      this.saveButtonPlaceHolder = saveButtonPlaceHolder;
    }

    /**
     * Returns the saveButtonPlaceHolder
     * @return the saveButtonPlaceHolder
     */
    public String getSaveButtonPlaceHolder()
    {
      return saveButtonPlaceHolder;
    }    
    
    /**
     * Sets the saveButtonHelpTextMessageKey
     * @param saveButtonHelpTextMessageKey
     */
    public void setSaveButtonHelpTextMessageKey(String saveButtonHelpTextMessageKey)
    {
      this.saveButtonHelpTextMessageKey = saveButtonHelpTextMessageKey;
    }

    /**
     * Returns the saveButtonHelpTextMessageKey
     * @return the saveButtonHelpTextMessageKey
     */
    public String getSaveButtonHelpTextMessageKey()
    {
      return saveButtonHelpTextMessageKey;
    }

    /**
     * Sets the saveButtonHelpText
     * @param saveButtonHelpText
     */
    public void setSaveButtonHelpText(String saveButtonHelpText)
    {
      this.saveButtonHelpText = saveButtonHelpText;
    }

    /**
     * Returns the saveButtonHelpText
     * @return the saveButtonHelpText
     */
    public String getSaveButtonHelpText()
    {
      return saveButtonHelpText;
    }    
    
    /**
     * Sets the saveButtonTooltipMessageKey
     * @param saveButtonTooltipMessageKey
     */
    public void setSaveButtonTooltipMessageKey(String saveButtonTooltipMessageKey)
    {
      this.saveButtonTooltipMessageKey = saveButtonTooltipMessageKey;
    }

    /**
     * Returns the saveButtonTooltipMessageKey
     * @return the saveButtonTooltipMessageKey
     */
    public String getSaveButtonTooltipMessageKey()
    {
      return saveButtonTooltipMessageKey;
    }

    /**
     * Sets the saveButtonTooltip
     * @param saveButtonTooltip
     */
    public void setSaveButtonTooltip(String saveButtonTooltip)
    {
      this.saveButtonTooltip = saveButtonTooltip;
    }

    /**
     * Returns the saveButtonTooltip
     * @return the saveButtonTooltip
     */
    public String getSaveButtonTooltip()
    {
      return saveButtonTooltip;
    }    


    /**
     * Checks for a newly created entity object
     * @return true if this is a newly created entity object meaning that it has not yet been persisted, otherwise false
     */
	public boolean isNew() {
		return (this.id == null);
	}
	
    
    
/*     @Override
     public String toString(){
     // TODO: To be implemented
    	return "TODO: to be done";
     }
*/     
}
    
    
    

