package org.volunteertech.pledges.goodspledge.dao;

import org.volunteertech.pledges.goodspledge.dao.GoodsPledge;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;
import java.util.HashSet;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonIgnore;


import org.volunteertech.pledges.pledge.dao.RegisterOfPledges;




/**
 * The goods pledge screen is used to add/edit a new/existing pledge of services
 * This class has been generated by the XSLT processor from the metadata and represents the
 * DataBase access handler for the GoodsPledge entity.
 * <P> 
 * It is essential that methods added to this class are given JavaDoc comments to allow
 * documentation to be generated. For a description of JavaDoc refer to The JavaDoc documentation.
 * A link is provided below.
 * <P>
 * @author Michael O'Connor
 * @version $Revision$
 * Date: $Date$
 * @see <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/index.html">JavaDoc Documentation</a> 
 * Change Log
 * ----------
 * $Log$
 *
 */
public class GoodsPledgeImpl implements GoodsPledge, Serializable { 

    private static final long serialVersionUID = 1L;
    
	/** Entity Id */
	private Long id;
	
    /** id of a parent object used when adding objects via JSON enabled restful web services */
    private Long parentObjectId;
    
    /**
     * Used to store the current processing mode during which the object was loaded
     */
    private CurrentMode currentMode;

    
    /** the goods category level one */
    private Long goodsCategoryOne;
    
    /** the goods category level one */
    private String goodsCategoryOneReferenceTranslation;
    
	
    /** the goods category level two */
    private Long goodsCategoryTwo;
    
    /** the goods category level two */
    private String goodsCategoryTwoReferenceTranslation;
    
	
    /** the goods category level three */
    private Long goodsCategoryThree;
    
    /** the goods category level three */
    private String goodsCategoryThreeReferenceTranslation;
    
	
    /** the goods size */
    private Long goodsSize;
    
    /** the goods size */
    private String goodsSizeReferenceTranslation;
    
	
    /** the goods size */
    private Long goodsNewOrUsed;
    
    /** the goods size */
    private String goodsNewOrUsedReferenceTranslation;
    
	
    /** the goods condition */
    private Long goodsCondition;
    
    /** the goods condition */
    private String goodsConditionReferenceTranslation;
    
	
    /** the quantity of goods */
    private Long goodsQuantity;
    
    /** the quantity of goods */
    private String goodsQuantityReferenceTranslation;
    
	
    /** the participant comments */
    private String additionalInformation;
	
    /** the participant comments */
    private String itemSize;
	
	/** the reference to the foreign associated RegisterOfPledges **/
	@JsonBackReference(value="registerofpledges-goodspledge")
	private RegisterOfPledges registerOfPledges;
  

    /** The user ID of the person that originally created the underlying record **/
    private Long createdByID;

    /** The user ID of the person that last updated the underlying record **/
    private Long updatedByID;

    /** The date that the underlying record was created DD/MM/YYYY-HH:MM format **/
    private Date dateCreated;

    /** The date that the underlying record was last updated DD/MM/YYYY-HH:MM format **/
    private Date dateUpdated;
    
    private Date dateAvailableFrom;
    
    private Date dateAvailableTo;
    private int status=0;
    public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

    /**
     * Default Constructor for the GoodsPledge bean
     */
    public GoodsPledgeImpl()
    {
    	
		this.goodsCategoryOne = new Long("0");
		
		this.goodsCategoryTwo = new Long("0");
		
		this.goodsCategoryThree = new Long("0");
		
		this.goodsSize = new Long("0");
		
		this.goodsNewOrUsed = new Long("0");
		
		this.goodsCondition = new Long("0");
		
		this.goodsQuantity = new Long("0");
		
		this.additionalInformation = new String();
		
		this.itemSize = new String();
		
    	this.dateCreated = new Date();
    	this.dateUpdated = new Date();
    	this.dateAvailableFrom = new Date();
    }
    
    /**
     * Returns the Id for the underlying database table record
     * @return the Id for the underlying database table record
     */
	public Long getId()
	{
        return id;
    }

    /**
     * Sets the Id. This allows front-end forms to bind the id property.
     * @param id the Id for the underlying database table record.
     */
	public void setId(Long id)
	{
        this.id = id;
    }

    /**
     * Returns the parentObjectId when this object has been populated via a restful webservice JSON mapping
     * @return the parentObjectId when this object has been populated via a restful webservice JSON mapping
     */
	public Long getParentObjectId()
	{
        return parentObjectId;
    }

    /**
     * Sets the parentObjectId. This allows restful web services to bind the parentId property when adding a new record.
     * @param parentObjectId allows restful web services to bind the parentId property when adding a new record.
     */
	public void setParentObjectId(Long parentObjectId)
	{
        this.parentObjectId = parentObjectId;
    }

    
    
    /**
     * Sets the goods category level one that has been chosen by the user
     * @param goodsCategoryOne is the goods category level one
     */
    public void setGoodsCategoryOne(Long goodsCategoryOne)
    {
      this.goodsCategoryOne = goodsCategoryOne;
    }

    /**
     * Returns the goods category level one that has been chosen by the user or saved in the database
     * @return the goods category level one
     */
    public Long getGoodsCategoryOne()
    {
      return goodsCategoryOne;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods category level one that has been chosen by the user
     * @param the translated reference mapping for goodsCategoryOne is the goods category level one
     */
    public void setGoodsCategoryOneReferenceTranslation(String goodsCategoryOneReferenceTranslation)
    {
      this.goodsCategoryOneReferenceTranslation = goodsCategoryOneReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods category level one that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods category level one
     */
    public String getGoodsCategoryOneReferenceTranslation()
    {
      return goodsCategoryOneReferenceTranslation;
    }
      
    
    /**
     * Sets the goods category level two that has been chosen by the user
     * @param goodsCategoryTwo is the goods category level two
     */
    public void setGoodsCategoryTwo(Long goodsCategoryTwo)
    {
      this.goodsCategoryTwo = goodsCategoryTwo;
    }

    /**
     * Returns the goods category level two that has been chosen by the user or saved in the database
     * @return the goods category level two
     */
    public Long getGoodsCategoryTwo()
    {
      return goodsCategoryTwo;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods category level two that has been chosen by the user
     * @param the translated reference mapping for goodsCategoryTwo is the goods category level two
     */
    public void setGoodsCategoryTwoReferenceTranslation(String goodsCategoryTwoReferenceTranslation)
    {
      this.goodsCategoryTwoReferenceTranslation = goodsCategoryTwoReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods category level two that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods category level two
     */
    public String getGoodsCategoryTwoReferenceTranslation()
    {
      return goodsCategoryTwoReferenceTranslation;
    }
      
    
    /**
     * Sets the goods category level three that has been chosen by the user
     * @param goodsCategoryThree is the goods category level three
     */
    public void setGoodsCategoryThree(Long goodsCategoryThree)
    {
      this.goodsCategoryThree = goodsCategoryThree;
    }

    /**
     * Returns the goods category level three that has been chosen by the user or saved in the database
     * @return the goods category level three
     */
    public Long getGoodsCategoryThree()
    {
      return goodsCategoryThree;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods category level three that has been chosen by the user
     * @param the translated reference mapping for goodsCategoryThree is the goods category level three
     */
    public void setGoodsCategoryThreeReferenceTranslation(String goodsCategoryThreeReferenceTranslation)
    {
      this.goodsCategoryThreeReferenceTranslation = goodsCategoryThreeReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods category level three that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods category level three
     */
    public String getGoodsCategoryThreeReferenceTranslation()
    {
      return goodsCategoryThreeReferenceTranslation;
    }
      
    
    /**
     * Sets the goods size that has been chosen by the user
     * @param goodsSize is the goods size
     */
    public void setGoodsSize(Long goodsSize)
    {
      this.goodsSize = goodsSize;
    }

    /**
     * Returns the goods size that has been chosen by the user or saved in the database
     * @return the goods size
     */
    public Long getGoodsSize()
    {
      return goodsSize;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods size that has been chosen by the user
     * @param the translated reference mapping for goodsSize is the goods size
     */
    public void setGoodsSizeReferenceTranslation(String goodsSizeReferenceTranslation)
    {
      this.goodsSizeReferenceTranslation = goodsSizeReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods size that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods size
     */
    public String getGoodsSizeReferenceTranslation()
    {
      return goodsSizeReferenceTranslation;
    }
      
    
    /**
     * Sets the goods size that has been chosen by the user
     * @param goodsNewOrUsed is the goods size
     */
    public void setGoodsNewOrUsed(Long goodsNewOrUsed)
    {
      this.goodsNewOrUsed = goodsNewOrUsed;
    }

    /**
     * Returns the goods size that has been chosen by the user or saved in the database
     * @return the goods size
     */
    public Long getGoodsNewOrUsed()
    {
      return goodsNewOrUsed;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods size that has been chosen by the user
     * @param the translated reference mapping for goodsNewOrUsed is the goods size
     */
    public void setGoodsNewOrUsedReferenceTranslation(String goodsNewOrUsedReferenceTranslation)
    {
      this.goodsNewOrUsedReferenceTranslation = goodsNewOrUsedReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods size that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods size
     */
    public String getGoodsNewOrUsedReferenceTranslation()
    {
      return goodsNewOrUsedReferenceTranslation;
    }
      
    
    /**
     * Sets the goods condition that has been chosen by the user
     * @param goodsCondition is the goods condition
     */
    public void setGoodsCondition(Long goodsCondition)
    {
      this.goodsCondition = goodsCondition;
    }

    /**
     * Returns the goods condition that has been chosen by the user or saved in the database
     * @return the goods condition
     */
    public Long getGoodsCondition()
    {
      return goodsCondition;
    }
    
    
    /**
     * Sets the translated reference mapping for the goods condition that has been chosen by the user
     * @param the translated reference mapping for goodsCondition is the goods condition
     */
    public void setGoodsConditionReferenceTranslation(String goodsConditionReferenceTranslation)
    {
      this.goodsConditionReferenceTranslation = goodsConditionReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the goods condition that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the goods condition
     */
    public String getGoodsConditionReferenceTranslation()
    {
      return goodsConditionReferenceTranslation;
    }
      
    
    /**
     * Sets the quantity of goods that has been chosen by the user
     * @param goodsQuantity is the quantity of goods
     */
    public void setGoodsQuantity(Long goodsQuantity)
    {
      this.goodsQuantity = goodsQuantity;
    }

    /**
     * Returns the quantity of goods that has been chosen by the user or saved in the database
     * @return the quantity of goods
     */
    public Long getGoodsQuantity()
    {
      return goodsQuantity;
    }
    
    
    /**
     * Sets the translated reference mapping for the quantity of goods that has been chosen by the user
     * @param the translated reference mapping for goodsQuantity is the quantity of goods
     */
    public void setGoodsQuantityReferenceTranslation(String goodsQuantityReferenceTranslation)
    {
      this.goodsQuantityReferenceTranslation = goodsQuantityReferenceTranslation;
    }

    /**
     * Returns the translated reference mapping for the quantity of goods that has been chosen by the user or saved in the database
     * @return the translated reference mapping for the quantity of goods
     */
    public String getGoodsQuantityReferenceTranslation()
    {
      return goodsQuantityReferenceTranslation;
    }
      
    
    /**
     * Sets the participant comments
     * @param additionalInformation is the participant comments
     */
    public void setAdditionalInformation(String additionalInformation)
    {
      this.additionalInformation = additionalInformation;
    }

    /**
     * Returns the participant comments
     * @return the participant comments
     */
    public String getAdditionalInformation()
    {
      return additionalInformation;
    }
    
    
    
    /**
     * Sets the participant comments
     * @param itemSize is the participant comments
     */
    public void setItemSize(String itemSize)
    {
      this.itemSize = itemSize;
    }

    /**
     * Returns the participant comments
     * @return the participant comments
     */
    public String getItemSize()
    {
      return itemSize;
    }
    
    
    /**
     * Sets the associated RegisterOfPledges mapped as the registerOfPledges property
     * @param the associated RegisterOfPledges mapped as the registerOfPledges property
     */
    public void setRegisterOfPledges(RegisterOfPledges registerOfPledges)
    {
      this.registerOfPledges = registerOfPledges;
    }

    /**
     * Returns the associated RegisterOfPledges mapped as the registerOfPledges property
     * @return the associated RegisterOfPledges mapped as the registerOfPledges property
     */
    public RegisterOfPledges getRegisterOfPledges()
    {
      return registerOfPledges;
    }
  

    /**
     * sets the Id of the user that created the underlying record
     * @param createdByID the Id of the user that created the underlying record
     */
    public void setCreatedByID(Long createdByID)
    {
        this.createdByID = createdByID;
    }

    /**
     * gets the Id of the user that created the underlying record
     * @return the Id of the user that created the underlying record
     */
    public Long getCreatedByID()
    {
        return createdByID;
    }
     
   	/**
     * sets the Id of the user that last updated the underlying record
     * @param updatedByID the Id of the user that last updated the underlying record
     */
    public void setUpdatedByID(Long updatedByID)
    {
        this.updatedByID = updatedByID;
    }
     
    /**
     * gets the Id of the user that last updated the underlying record
     * @return the Id of the user that last updated the underlying record
     */
    public Long getUpdatedByID()
    {
        return updatedByID;
    }

    /**
     * sets the date that the underlying record was first created as a <code>java.util.Date</code> object
     * @param dateCreated the date that the underlying record was first created
     */
    public void setDateCreated(Date dateCreated)
    {
        this.dateCreated = dateCreated;
    }

    /**
     * Gets the date that the underlying record was first created as a <code>java.util.Date</code> object
     * @return the date that the underlying record was first created
     */
    public Date getDateCreated()
    {
        return dateCreated;
    }

    /**
     * Sets the date that the underlying record was last updated as a <code>java.util.Date</code> object
     * @param dateUpdated the date that the underlying record was last updated
     */
    public void setDateUpdated(Date dateUpdated)
    {
        this.dateUpdated = dateUpdated;
    }

    /**
     * Gets the date that the underlying record was last updated as a <code>java.util.Date</code> object
     * @return the date that the underlying record was last updated
     */
    public Date getDateUpdated()
    {
        return dateUpdated;
    }
    
    /**
     * Checks for a newly created entity object
     * @return true if this is a newly created entity object meaning that it has not yet been persisted, otherwise false
     */
	public boolean isNew() {
		return (this.id == null);
	}
	
	/**
	 * Sets the current mode of use for the entity object;
	 * @param mode a member of the CurrentMode enumeration
	 */
	public void setCurrentMode(CurrentMode mode){
		this.currentMode = mode;
	}	

    /**
     * Returns the current mode under which the class instance was loaded
     * @return A member of the CurrentMode Enumeration
     */
	public CurrentMode getCurrentMode() {
		return this.currentMode;
	}
    
    
     @Override
     public String toString(){
    	return "GoodsPledge [id=" + id + ", " + "goodsCategoryOne=" + goodsCategoryOne + ", " + "goodsCategoryTwo=" + goodsCategoryTwo + ", " + "goodsCategoryThree=" + goodsCategoryThree + ", " + "goodsSize=" + goodsSize + ", " + "goodsNewOrUsed=" + goodsNewOrUsed + ", " + "goodsCondition=" + goodsCondition + ", " + "goodsQuantity=" + goodsQuantity + ", " + "additionalInformation=" + additionalInformation + ", " + "itemSize=" + itemSize + "]";
     }

	@Override
	public Date getDateAvailableFrom() {
		// TODO Auto-generated method stub
		return this.dateAvailableFrom;
	}

	@Override
	public Date getDateAvailableTo() {
		// TODO Auto-generated method stub
		return this.dateAvailableTo;
	}

	public void setDateAvailableFrom(Date dateAvailableFrom) {
		this.dateAvailableFrom = dateAvailableFrom;
	}

	public void setDateAvailableTo(Date dateAvailableTo) {
		this.dateAvailableTo = dateAvailableTo;
	}
	
	
	
}
    
    
    

