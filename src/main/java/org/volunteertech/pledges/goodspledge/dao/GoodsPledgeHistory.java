package org.volunteertech.pledges.goodspledge.dao;
import java.util.Date;
import java.math.BigDecimal;

/**
 * The goods pledge screen is used to add/edit a new/existing pledge of services
 * This class has been generated by the XSLT processor from the metadata and represents the
 * DataBase access handler for the GoodsPledge entity.
 * <P> 
 * It is essential that methods added to this class are given JavaDoc comments to allow
 * documentation to be generated. For a description of JavaDoc refer to The JavaDoc documentation.
 * A link is provided below.
 * <P>
 * @author Michael O'Connor
 * @version $Revision$
 * Date: $Date$
 * @see <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/index.html">JavaDoc Documentation</a> 
 * Change Log
 * ----------
 * $Log$
 *
 */
public class GoodsPledgeHistory
{
	/** Hibernate Id */
	private Long id;
	
	/** id from the parent table for which this represents an historic record **/
	private Long goodsPledgeID;
	 
    
    /** the address type */
    private Long pledgedGoods;
	
    /** the participant comments */
    private String additionalInformation;
	
    /** the participant comments */
    private String itemSize;
	
    /** the address type */
    private Long goodsCondition;
	
    /** the address type */
    private Long numberOfItems;
	     
    
    /** The user ID of the person that originally created the underlying record **/
    private Long createdByID;

    /** The user ID of the person that last updated the underlying record **/
    private Long updatedByID;

    /** The date that the underlying record was created DD/MM/YYYY-HH:MM format **/
    private Date dateCreated;

    /** The date that the underlying record was last updated DD/MM/YYYY-HH:MM format **/
    private Date dateUpdated;
    

    /**
     * Default Constructor for the GoodsPledge bean
     */
    public GoodsPledgeHistory()
    {
    	goodsPledgeID = new Long(0);
    	pledgedGoods = new Long("0");
		additionalInformation = new String();
		itemSize = new String();
		goodsCondition = new Long("0");
		numberOfItems = new Long("0");
		
    }
    
    /*
     * Returns the Id for the underlying database table record
     */
	public Long getId()
	{
        return id;
    }

	/**
	 * We usually do not manipulate the identity of an object, hence the setter method should be private.
	 */
	@SuppressWarnings("unused")
    private void setId(Long id)
    {
        this.id = id;
    }    


    /*
     * Returns the GoodsPledgeID for the parent record
     */
	public Long getGoodsPledgeID()
	{
        return goodsPledgeID;
    }

	/**
	 * We usually do not manipulate the identity of an object, hence the setter method should be private.
	 */
	@SuppressWarnings("unused")
    private void setGoodsPledgeID(Long goodsPledgeID)
    {
        this.goodsPledgeID = goodsPledgeID;
    }    

    

    
    
    /**
     * Sets the address type that has been chosen by the user
     * @param pledgedGoods is the address type
     */
    public void setPledgedGoods(Long pledgedGoods)
    {
      this.pledgedGoods = pledgedGoods;
    }

    /**
     * Returns the address type that has been chosen by the user or saved in the database
     * @return the address type
     */
    public Long getPledgedGoods()
    {
      return pledgedGoods;
    }

    
    /**
     * Sets the participant comments
     * @param additionalInformation is the participant comments
     */
    public void setAdditionalInformation(String additionalInformation)
    {
      this.additionalInformation = additionalInformation;
    }

    /**
     * Returns the participant comments
     * @return the participant comments
     */
    public String getAdditionalInformation()
    {
      return additionalInformation;
    }

    
    /**
     * Sets the participant comments
     * @param itemSize is the participant comments
     */
    public void setItemSize(String itemSize)
    {
      this.itemSize = itemSize;
    }

    /**
     * Returns the participant comments
     * @return the participant comments
     */
    public String getItemSize()
    {
      return itemSize;
    }

    
    /**
     * Sets the address type that has been chosen by the user
     * @param goodsCondition is the address type
     */
    public void setGoodsCondition(Long goodsCondition)
    {
      this.goodsCondition = goodsCondition;
    }

    /**
     * Returns the address type that has been chosen by the user or saved in the database
     * @return the address type
     */
    public Long getGoodsCondition()
    {
      return goodsCondition;
    }

    
    /**
     * Sets the address type
     * @param numberOfItems is the address type
     */
    public void setNumberOfItems(Long numberOfItems)
    {
      this.numberOfItems = numberOfItems;
    }

    /**
     * Returns the address type
     * @return the address type
     */
    public Long getNumberOfItems()
    {
      return numberOfItems;
    }


    /**
     * sets the ID of the user that created the underlying record
     */
    public void setCreatedByID(Long createdByID)
    {
        this.createdByID = createdByID;
    }


    /**
     * gets the ID of the user that created the underlying record
     */
    public Long getCreatedByID()
    {
        return createdByID;
    }
     
     
    /**
     * sets the ID of the user that last updated the underlying record
     */
    public void setUpdatedByID(Long updatedByID)
    {
        this.updatedByID = updatedByID;
    }
     
     
    /**
     * gets the ID of the user that last updated the underlying record
     */
    public Long getUpdatedByID()
    {
        return updatedByID;
    }


    /**
     * sets the date that the underlying record was first created as a <code>java.util.Date</code> object
     */
    public void setDateCreated(Date dateCreated)
    {
        this.dateCreated = dateCreated;
    }

     
    /**
     * Gets the date that the underlying record was first created as a <code>java.util.Date</code> object
     */
    public Date getDateCreated()
    {
        return dateCreated;
    }

    /**
     * sets the date that the underlying record was last updated as a <code>java.util.Date</code> object
     */
    public void setDateUpdated(Date dateUpdated)
    {
        this.dateUpdated = dateUpdated;
    }


    
    /**
     * Gets the date that the underlying record was last updated as a <code>java.util.Date</code> object
     */
    public Date getDateUpdated()
    {
        return dateUpdated;
    }
    
     
}
    
    
    

